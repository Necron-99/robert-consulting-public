# =============================================================================
# TERRAFORM CONFIGURATION
# =============================================================================

# Terraform state files (NEVER commit these)
*.tfstate
*.tfstate.*
terraform.tfstate
terraform.tfstate.backup
terraform.tfstate.*.backup

# Terraform plan files
*.tfplan
*.tfplan.*

# Terraform variable files (sensitive data)
*.tfvars
*.tfvars.json
!*.tfvars.example

# Terraform working directory
.terraform/
.terraform.lock.hcl

# Terraform provider files (large binary files)
.terraform/providers/

# Terraform backend backup files
backend.tf.backup
bootstrap.tf.backup

# =============================================================================
# AWS CONFIGURATION
# =============================================================================

# AWS CLI distribution
awscliv2.zip
aws/

# AWS credentials and configuration
.aws/
aws-credentials.json
aws-config.json
aws-config
credentials
config

# AWS Lambda deployment packages
*.zip
lambda-*.zip
contact-form.zip

# =============================================================================
# SENSITIVE FILES
# =============================================================================

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Configuration files with sensitive data
config.json
secrets.json
credentials.json

# Certificate and key files
*.pem
*.key
*.crt
*.p12
*.pfx

# =============================================================================
# DEVELOPMENT TOOLS
# =============================================================================

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Node.js
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.eslintcache
jspm_packages/
.yarn-integrity

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/
env.bak/
venv.bak/

# =============================================================================
# OPERATING SYSTEM FILES
# =============================================================================

# macOS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
.AppleDouble
.LSOverride
Icon
.DocumentRevisions-V100
.fseventsd
.TemporaryItems
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Synology NAS
@eaDir

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# =============================================================================
# BUILD AND CACHE DIRECTORIES
# =============================================================================

# Build artifacts
dist/
build/
target/
out/

# Cache directories
.cache/
cache/

# Temporary files
tmp/
temp/
.tmp/
.temp/

# =============================================================================
# BACKUP AND LOG FILES
# =============================================================================

# Backup files
*.backup
*.bak
*.old
*.orig

# Backup directories
backup/

# Log files
*.log
logs/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directories
coverage/

# =============================================================================
# DATABASE FILES
# =============================================================================

# Database files
*.db
*.sqlite
*.sqlite3

# =============================================================================
# PACKAGE FILES
# =============================================================================

# Package files
*.tgz

# =============================================================================
# DYNAMIC VERSION FILES
# =============================================================================

# Dynamic version files (generated at runtime)
website/version.json
website/version-fallback.json
website/version-*.json
website/dynamic-version.js
website/version-manager.js
website/version-updater.js

# =============================================================================
# SECURITY SCAN REPORTS
# =============================================================================

# Security scan reports (generated by security scanning tools)
security-scan-report-*.md
security-report-*.md
*.security-report
zap-report-*.html
zap-report-*.json
zap-report-*.xml

# WAF rule files (temporary)
waf-rules-*.json

# Daily learning logs
daily-learning-log.md

# =============================================================================
# GENERATED REPORTS AND ANALYSIS
# =============================================================================

# Infrastructure analysis reports
*_ANALYSIS_REPORT.md
*_CLEANUP_REPORT.md
*_CLEANUP_SUMMARY.md
*_CLEANUP_PLAN.md
*_VERIFICATION_REPORT.md
*_COMPLETION_REPORT.md
*_MIGRATION_SUMMARY.md
*_IMPLEMENTATION.md
*_SOLUTION.md
*_STRATEGY.md
*_SUMMARY.md
*_OVERVIEW.md
*_PLAN.md

# Terraform reports
terraform-drift-report-*.md
terraform-import-plan.md
terraform-infrastructure-verification-plan.md
terraform-security-remediation-plan.md
terraform-state-comparison.md

# Security assessment reports
security-assessment-report-*.md
security-vulnerability-assessment-plan.md

# Workflow and audit reports
WORKFLOW_AUDIT_REPORT.md
CI-CD-PIPELINE-OVERVIEW.md

# Phase reports
PHASE*_VERIFICATION_REPORT.md
PHASE*_COMPLETION_REPORT.md

# State management reports
STATE_LOCK_ISSUE_ANALYSIS.md
TERRAFORM_STATE_*.md

# Infrastructure management reports
infrastructure-management-*.md
comprehensive-infrastructure-cleanup-plan.md
deployment-ready-summary.md

# Project-specific reports
PLEX_RECOMMENDATIONS_*.md
PUBLIC_REPOSITORY_ANALYSIS_REPORT.md
FINAL_CLEANUP_REPORT.md

# =============================================================================
# TEST AND TEMPORARY FILES
# =============================================================================

# Test response files
*-response.json
*-test-response.json
terraform-stats-response.json
plex-stats-response.json

# Temporary deployment files
*-deployment-*.json
*-temp-*.json

# Test directories
test-backend/
test-backend-clean/
test-*/

# Temporary scripts
fix_*.sh
eslint-errors.json

# Cleanup plan files
REPOSITORY_CLEANUP_PLAN.md

# =============================================================================
# SEPARATE PROJECTS
# =============================================================================

# Plex recommendations (separate project)
plex-recommendations/

# =============================================================================
# TERRAFORM FILES TO KEEP IN SOURCE CONTROL
# =============================================================================
# The following Terraform files SHOULD be committed:
# - *.tf (configuration files)
# - *.tf.example (example files)
# - terraform/ directory structure
# - README.md files
# - Documentation files
#
# Only exclude the terraform/ directory if you want to ignore ALL terraform files
# Otherwise, use specific patterns above to exclude only state and sensitive files.terraform/providers/
plex-recommendations/

# Test artifacts
response*.json

# Test artifacts
response*.json
# Secure .gitignore additions
# Prevents accidental commits of sensitive files

# Terraform state files
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# State backups
.terraform-state-backups/

# Secure scripts directory
.secure-scripts/

# Environment files with secrets
.env
.env.*
*.env
secrets/
credentials/

# AWS credentials
.aws/
aws-credentials

# SSH keys
*.pem
*.key
id_rsa*
id_ed25519*

# Certificates
*.crt
*.cert
*.p12
*.pfx

# Database dumps
*.sql
*.dump

# Log files with potential secrets
*.log
logs/

# Temporary files
*.tmp
*.temp
.DS_Store
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo

# Backup files
*.bak
*.backup
*~

# Scripts with potential secrets (add specific files here)
# deploy-with-secrets.sh
# production-deploy.sh
# staging-deploy.sh
