name: Modern Security Scan

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  # GitHub CodeQL - Native static analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  # Trivy - Comprehensive security scanning
  trivy:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        category: 'trivy'

  # Trivy - Terraform specific scanning
  trivy-terraform:
    name: Trivy Terraform Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Trivy Terraform scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'config'
        scan-ref: 'terraform/'
        format: 'sarif'
        output: 'trivy-terraform-results.sarif'

    - name: Upload Trivy Terraform scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-terraform-results.sarif'
        category: 'trivy-terraform'

  # Snyk - Dependency and container scanning
  snyk:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Snyk to check for vulnerabilities
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

    - name: Run Snyk to check for vulnerabilities in Python
      uses: snyk/actions/python@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  # Security summary
  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [codeql, trivy, trivy-terraform, snyk]
    if: always()

    steps:
    - name: Generate Security Summary
      run: |
        echo "## ðŸ”’ Security Scan Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Scan Results:" >> $GITHUB_STEP_SUMMARY
        echo "- **CodeQL Analysis (JS/Python)**: ${{ needs.codeql.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trivy Security Scan**: ${{ needs.trivy.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trivy Terraform Scan**: ${{ needs.trivy-terraform.result }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Snyk Dependency Scan**: ${{ needs.snyk.result }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Next Steps:" >> $GITHUB_STEP_SUMMARY
        echo "1. Review any security findings in the Security tab" >> $GITHUB_STEP_SUMMARY
        echo "2. Address high and critical severity issues" >> $GITHUB_STEP_SUMMARY
        echo "3. Dependabot will automatically create PRs for dependency updates" >> $GITHUB_STEP_SUMMARY
