name: Deploy Client Content

on:
  workflow_dispatch:
    inputs:
      client_name:
        description: 'Client name (e.g., baileylessons)'
        required: true
        type: string
      client_repo:
        description: 'GitHub repository (e.g., username/baileylessons.com)'
        required: true
        type: string
      s3_bucket:
        description: 'S3 bucket name'
        required: true
        type: string
      cloudfront_distribution_id:
        description: 'CloudFront distribution ID'
        required: true
        type: string
      wait_for_invalidation:
        description: 'Wait for CloudFront invalidation to complete'
        required: false
        type: boolean
        default: false
  schedule:
    # Run daily at 6 AM UTC to check for updates
    - cron: '0 6 * * *'

jobs:
  deploy:
    name: Deploy Client Content
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set deployment parameters
      id: params
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "client_name=${{ github.event.inputs.client_name }}" >> $GITHUB_OUTPUT
          echo "client_repo=${{ github.event.inputs.client_repo }}" >> $GITHUB_OUTPUT
          echo "s3_bucket=${{ github.event.inputs.s3_bucket }}" >> $GITHUB_OUTPUT
          echo "cloudfront_distribution_id=${{ github.event.inputs.cloudfront_distribution_id }}" >> $GITHUB_OUTPUT
          echo "wait_for_invalidation=${{ github.event.inputs.wait_for_invalidation }}" >> $GITHUB_OUTPUT
        else
          # Scheduled run - deploy all configured clients
          echo "client_name=all" >> $GITHUB_OUTPUT
          echo "client_repo=all" >> $GITHUB_OUTPUT
          echo "s3_bucket=all" >> $GITHUB_OUTPUT
          echo "cloudfront_distribution_id=all" >> $GITHUB_OUTPUT
          echo "wait_for_invalidation=false" >> $GITHUB_OUTPUT
        fi

    - name: Deploy single client (manual)
      if: github.event_name == 'workflow_dispatch'
      run: |
        echo "üöÄ Deploying client: ${{ steps.params.outputs.client_name }}"
        echo "Repository: ${{ steps.params.outputs.client_repo }}"
        echo "S3 Bucket: ${{ steps.params.outputs.s3_bucket }}"
        echo "CloudFront: ${{ steps.params.outputs.cloudfront_distribution_id }}"
        
        # Set environment variable for invalidation wait
        if [ "${{ steps.params.outputs.wait_for_invalidation }}" = "true" ]; then
          export WAIT_FOR_INVALIDATION=true
        fi
        
        # Run deployment script
        chmod +x scripts/deploy-client-content.sh
        ./scripts/deploy-client-content.sh \
          "${{ steps.params.outputs.client_name }}" \
          "${{ steps.params.outputs.client_repo }}" \
          "${{ steps.params.outputs.s3_bucket }}" \
          "${{ steps.params.outputs.cloudfront_distribution_id }}"

    - name: Deploy all clients (scheduled)
      if: github.event_name == 'schedule'
      run: |
        echo "üîÑ Running scheduled deployment for all clients..."
        
        # Find all client configurations
        for config_file in clients/*/config.json; do
          if [ -f "$config_file" ]; then
            client_name=$(jq -r '.client_name' "$config_file")
            client_repo=$(jq -r '.client_repo' "$config_file")
            s3_bucket=$(jq -r '.s3_bucket' "$config_file")
            cloudfront_id=$(jq -r '.cloudfront_distribution_id' "$config_file")
            
            # Skip if CloudFront ID is not set
            if [ "$cloudfront_id" = "null" ] || [ -z "$cloudfront_id" ]; then
              echo "‚ö†Ô∏è Skipping $client_name - CloudFront distribution ID not set"
              continue
            fi
            
            echo "üöÄ Deploying $client_name..."
            chmod +x scripts/deploy-client-content.sh
            ./scripts/deploy-client-content.sh \
              "$client_name" \
              "$client_repo" \
              "$s3_bucket" \
              "$cloudfront_id"
          fi
        done

    - name: Deployment Summary
      run: |
        echo "‚úÖ Client content deployment completed!"
        echo "Deployment time: $(date -u)"
        echo "Client: ${{ steps.params.outputs.client_name }}"
        echo "Repository: ${{ steps.params.outputs.client_repo }}"
        echo "S3 Bucket: ${{ steps.params.outputs.s3_bucket }}"
        echo "CloudFront Distribution: ${{ steps.params.outputs.cloudfront_distribution_id }}"
