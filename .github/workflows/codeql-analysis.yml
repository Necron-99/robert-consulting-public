name: "CodeQL Analysis"

on:
  push:
    branches: [ "main", "staging" ]
  pull_request:
    branches: [ "main", "staging" ]
  schedule:
    # Run CodeQL analysis every day at 2:00 UTC
    - cron: '0 2 * * *'

jobs:
  analyze-javascript:
    name: Analyze JavaScript
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        queries: security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript"

  analyze-python:
    name: Analyze Python
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: python
        queries: security-and-quality

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:python"

  # Terraform validation (CodeQL doesn't support Terraform)
  terraform-validation:
    name: Terraform Validation
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.0'

    - name: Terraform Format Check
      run: |
        if [ -d "terraform" ]; then
          cd terraform
          echo "🔍 Checking Terraform formatting..."
          if terraform fmt -check -recursive; then
            echo "✅ Terraform formatting is correct"
          else
            echo "⚠️ Terraform formatting issues found (non-blocking)"
          fi
        else
          echo "ℹ️ No terraform directory found"
        fi

    - name: Terraform Validation
      run: |
        if [ -d "terraform" ]; then
          cd terraform
          echo "🔍 Validating Terraform configuration..."
          if terraform init -backend=false; then
            echo "✅ Terraform initialization successful"
            if terraform validate; then
              echo "✅ Terraform configuration is valid"
            else
              echo "⚠️ Terraform validation failed (expected without AWS credentials)"
            fi
          else
            echo "⚠️ Terraform initialization failed (expected without AWS credentials)"
          fi
        else
          echo "ℹ️ No terraform directory found"
        fi

  # Security policy compliance check
  security-policy-check:
    name: Security Policy Compliance
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Check for Security Policy
      run: |
        echo "🔍 Checking for security policy files..."
        if [ ! -f "SECURITY.md" ]; then
          echo "❌ SECURITY.md file not found"
          exit 1
        else
          echo "✅ SECURITY.md file found"
        fi

    - name: Validate Security Headers
      run: |
        echo "🔍 Checking for security headers in website files..."
        if [ -d "website" ]; then
          if grep -r "Content-Security-Policy" website/; then
            echo "✅ Content-Security-Policy found"
          else
            echo "❌ Content-Security-Policy missing"
            exit 1
          fi
        else
          echo "ℹ️ No website directory found, skipping security headers check"
        fi

    - name: Check for Hardcoded Secrets
      run: |
        echo "🔍 Scanning for potential hardcoded secrets..."
        if grep -r -E "(password|secret|key|token).*=.*['\"][^'\"]{8,}['\"]" . --exclude-dir=.git --exclude-dir=node_modules --exclude="*.md" --exclude="workflow-test.md" 2>/dev/null; then
          echo "❌ Potential hardcoded secrets found"
          echo "Please review the following files for hardcoded secrets:"
          grep -r -E "(password|secret|key|token).*=.*['\"][^'\"]{8,}['\"]" . --exclude-dir=.git --exclude-dir=node_modules --exclude="*.md" --exclude="workflow-test.md" 2>/dev/null || true
          exit 1
        else
          echo "✅ No hardcoded secrets detected"
        fi
